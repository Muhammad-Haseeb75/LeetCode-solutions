#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

 bool isValid(vector<int>&nums , int c , int maxDistance) {
    int cow = 1 , lastposition = nums[0];

    for (int i=1; i<nums.size(); i++) {
        if (nums[i]-lastposition >= maxDistance) {
            cow++;
            lastposition = nums[i];
        }

        if (cow == c) return true;
    }

    return false;
 }

int getDistance(vector<int>&nums , int c) {
    sort(nums.begin() , nums.end());

    int st = 1 , end = nums[nums.size()-1] - nums[0] , ans = -1;

    while (st <= end) {
        int mid = st + (end - st) / 2;
         

        if (isValid(nums , c , mid)) {
            ans = mid;
            st = mid + 1;
        } else end = mid - 1;
    }

    return ans;
}

int main() {
    vector<int>vec = {1 , 2, 8 , 4, 9};
    int c = 3;

    cout << "Maximum allowed Distance is : " << getDistance(vec , c);
}
